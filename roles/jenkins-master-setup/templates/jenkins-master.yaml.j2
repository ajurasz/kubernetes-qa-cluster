apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-master
  labels:
    app: jenkins-master
    type: ci
    env: global
spec:
  storageClassName: manual
  capacity:
    storage: "{{ jenkins_storage_size_gb }}Gi"
  accessModes:
    - ReadWriteOnce
  nfs:
    server: {{ hostvars['master'].ansible_host }}
    path: "/srv/nfs/kubedata/jenkins-master"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-master
  namespace: jenkins
  labels:
    app: jenkins-master
    type: ci
    env: global
spec:
  storageClassName: manual
  volumeName: jenkins-master
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "{{ jenkins_storage_size_gb }}Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-master
  namespace: jenkins
  labels:
    app: jenkins-master
    type: ci
    env: global
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-master
  template:
    metadata:
      labels:
        app: jenkins-master
        type: ci
        env: global
    spec:
      securityContext:
        runAsUser: 0
        fsGroup: 1000    
      containers:
        - name: jenkins-master
          image: "jenkins/jenkins:{{ jenkins_version }}"
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8080
            - containerPort: 50000
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-home
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 512Mi                         
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins-master
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-master
  namespace: jenkins
  labels:
    app: jenkins-master
    type: ci
    env: global
spec:
  type: NodePort
  ports:
   - port: 8080
     nodePort: 30001
  selector:
   app: jenkins-master
