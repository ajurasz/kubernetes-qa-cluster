apiVersion: v1
kind: Namespace
metadata:
   name: postgres
   labels:
     type: storage
     env: global
---   
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres
  namespace: postgres
  labels:
    app: postgres
    type: storage
    env: global
data:
  POSTGRES_DB: "{{ postgres_db }}"
  POSTGRES_USER: "{{ postgres_user }}"
  POSTGRES_PASSWORD: "{{ postgres_password }}"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres
  labels:
    app: postgres
    type: storage
    env: global
spec:
  storageClassName: manual
  capacity:
    storage: "{{ postgres_storage_size_gb }}Gi"
  accessModes:
    - ReadWriteOnce
  nfs:
    server: {{ hostvars['master'].ansible_host }}
    path: "/srv/nfs/kubedata/postgres"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres
  namespace: postgres
  labels:
    app: postgres
    type: storage
    env: global
spec:
  storageClassName: manual
  volumeName: postgres
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "{{ postgres_storage_size_gb }}Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: postgres
  labels:
    app: postgres
    type: storage
    env: global
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        type: storage
        env: global
    spec:
      containers:
        - name: postgres
          image: postgres:{{ postgres_version }}
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 256Mi          
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: postgres
  labels:
    app: postgres
    type: storage
    env: global
spec:
  type: NodePort
  ports:
   - port: 5432
     nodePort: 30000
  selector:
   app: postgres         